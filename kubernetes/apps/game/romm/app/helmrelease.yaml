# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app romm
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      romm:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5.0@sha256:e0c87ce7df39d06b93f27cf2cc6a056611f13faaa88cc07ab4dc8bf7a85d0b11
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: romm-secret
        containers:
          app:
            image:
              repository: ghcr.io/rommapp/romm
              tag: 4.0.1@sha256:2f31f792885cd0fc839a590b9645ada846106d4893e5de0be68dc6580b11b5f9
              pullPolicy: IfNotPresent
            env:
              ROMM_DB_DRIVER: postgresql
              ROMM_BASE_PATH: /romm
              DISABLE_DOWNLOAD_ENDPOINT_AUTH: true
              ENABLE_SCHEDULED_RESCAN: "true"
              SCHEDULED_RESCAN_CRON: "0 3 * * *"
              ENABLE_SCHEDULED_UPDATE_SWITCH_TITLEDB: "false"
              ENABLE_SCHEDULED_UPDATE_MAME_XML: "false"
              ENABLE_RESCAN_ON_FILESYSTEM_CHANGE: "true"
              RESCAN_ON_FILESYSTEM_CHANGE_DELAY: 5
              DISABLE_USERPASS_LOGIN: false
              TZ: America/Los_Angeles
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &port 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 4Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 8675309
        fsGroup: 8675309
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44, 10000]
        seccompProfile: {type: RuntimeDefault}
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        hosts:
          - host: romm.chezlawrence.com
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      data:
        existingClaim: ${APP}
        advancedMounts:
          romm:
            app:
              - path: /romm/assets
                subPath: assets
              - path: /romm/resources
                subPath: resources
      config:
        type: configMap
        name: romm-config
        globalMounts:
          - path: /romm/config/config.yml
            subPath: config.yml
            readOnly: false
      media:
        type: nfs
        server: nas0.internal
        path: /tank/roms
        globalMounts:
          - path: /romm/library
      nginx-conf:
        type: emptyDir
        globalMounts:
          - path: /etc/nginx/conf.d
      tmp:
        type: emptyDir
        sizeLimit: 1Gi
