---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app tdarr-node
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: intel.feature.node.kubernetes.io/gpu
                  operator: In
                  values:
                    - "true"
    controllers:
      tdarr-node:
        containers:
          app:
            image:
              repository: haveagitgat/tdarr_node
              tag: 2.44.01@sha256:830e5cb1dbc1147e67097ab072032be7590991acea31d1fb72cca1629124a14b
            env:
              - name: TZ
                value: America/Los_Angeles
              - name: PGID
                value: "8675309"
              - name: PUID
                value: "10070"
              - name: nodeID
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
              - name: serverIP
                value: tdarr.media.svc.cluster.local
              - name: serverPort
                value: 8266
            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 100m
                memory: 256Mi
              limits:
                gpu.intel.com/i915: 1
                memory: 1Gi
        pod:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app.kubernetes.io/name
                        operator: In
                        values: ["plex", "tdarr-node"]
                  topologyKey: kubernetes.io/hostname
        replicas: 2
    service:
      app:
        controller: *app
        enabled: false
    persistence:
      cache:
        type: nfs
        server: nas0.internal
        path: /tank/transcode/tdarr/transcode-cache
        globalMounts:
          - path: /cache
      movies:
        type: nfs
        server: nas0.internal
        path: /tank/media/movies
        globalMounts:
          - path: /movies
      tv:
        type: nfs
        server: nas0.internal
        path: /tank/media/tv
        globalMounts:
          - path: /tv
