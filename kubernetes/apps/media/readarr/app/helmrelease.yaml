---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app readarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      readarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5.0@sha256:e0c87ce7df39d06b93f27cf2cc6a056611f13faaa88cc07ab4dc8bf7a85d0b11
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: readarr-secret
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/readarr
              tag: 0.4.17.2801@sha256:6bb62cd6c4d74b2cc6b0e9a8334a5034f75fd73cdbf5d47bf98381a6eba7a6e8
              pullPolicy: IfNotPresent
            env:
              # Readarr App
              READARR__APP__INSTANCENAME: Readarr
              READARR__APP__THEME: dark
              READARR__AUTH__METHOD: External
              READARR__AUTH__REQUIRED: DisabledForLocalAddresses
              READARR__SERVER__PORT: &port 80
              READARR__LOG_LEVEL: info
              READARR__UPDATE__BRANCH: develop
              READARR__POSTGRES__MAINDB: readarr-main
              READARR__POSTGRES__LOGDB: readarr-log
              READARR__POSTGRES__CACHEDB: readarr-cache
              READARR__POSTGRES__PORT: "5432"
              TZ: America/Los_Angeles
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 2Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 10000
        runAsGroup: 8675309
        fsGroup: 8675309
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: readarr
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        hosts:
          - host: readarr.chezlawrence.com
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      books:
        type: nfs
        server: nas0.internal
        path: /tank/media/books
        globalMounts:
          - path: /books
      cache:
        existingClaim: readarr-cache
        globalMounts:
          - path: /config/MediaCover
      config:
        existingClaim: readarr
      downloads:
        type: nfs
        server: nas0.internal
        path: /tank/downloads
        globalMounts:
          - path: /downloads
      tmp:
        type: emptyDir
